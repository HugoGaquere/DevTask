name: Build-Linux-Installer

on:
  push:
    branches:
      - main

jobs:
  build-linux-installer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Install makeself
        run: |
          sudo apt-get update
          sudo apt-get install -y makeself

      - name: Run build script
        run: bash ./scripts/build.sh

      - name: Cache build
        uses: actions/cache@v2
        env:
          cache-name: cache-linux-installer-build
        with:
          path: ./devtask.sh
          key: linux-installer-build
          
          #      - name: Upload artifact
          #        uses: actions/upload-artifact@v2
          #        with:
          #          name: linux-installer-artifact
          #          path: ./devtask.sh
  
  release:
    runs-on: ubuntu-latest
    needs: [ build-linux-installer ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Restore cache build
        uses: actions/cache@v2
#        env:
#          cache-name: cache-linux-installer-build
        with:
#          path: ./devtask.sh
          key: linux-installer-build

#      - name: Download Linux-Installer Artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: linux-installer-artifact

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}-${{ github.run_number }}
          release_name: Release ${{ github.ref_name }}-${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Linux-Installer Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./devtask.sh
          asset_name: devtask_linux_x64.sh
          asset_content_type: application/x-shellscript
